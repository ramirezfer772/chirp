import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";

// import { useUser } from "@clerk/nextjs";
import { api } from "~/utils/api";

import { generateSSGHelper } from "~/server/helpers/ssgHelper";

// type PageProps = InferGetStaticPropsType<typeof getStaticProps>

const ProfilePage: NextPage<{username: string}> = ({username}) => {
  const {data, isLoading } = api.profile.getUserByUsername.useQuery({username})

  if (isLoading) {
    console.log("is loading !!!")
  }

  if (!data) return <div>404</div>

  console.log("ðŸš€ ~ file: [slug].tsx:13 ~ data:", data)

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <h1>Profile View</h1> 
      </main>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (ctx) => {
  const ssg = generateSSGHelper()

  const slug = ctx.params?.slug

  if (typeof slug !== "string") throw new Error("No slug provided")

  const username = slug.replace("@", "")

  await ssg.profile.getUserByUsername.prefetch({username})

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    }
  }
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: "blocking",
  }
}

export default ProfilePage;